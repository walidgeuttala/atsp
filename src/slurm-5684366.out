Traceback (most recent call last):
  File "/project/p_gnn001/code/tsp/atsp/src/test_fun.py", line 380, in <module>
    y_pred = model(batch, x)
  File "/home/p_gnngw/miniconda3/envs/directed_gnn/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/project/p_gnn001/code/tsp/atsp/src/test_fun.py", line 351, in forward
    x_dict = gnn_layer(x_dict, data.edge_index_dict)
  File "/home/p_gnngw/miniconda3/envs/directed_gnn/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/project/p_gnn001/code/tsp/atsp/src/test_fun.py", line 317, in forward
    out = conv((x_dict[src_type], x_dict[dst_type]), edge_index)
  File "/home/p_gnngw/miniconda3/envs/directed_gnn/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/project/p_gnn001/code/tsp/atsp/src/test_fun.py", line 280, in forward
    return self.propagate(edge_index, x=(x_src, x_dst))
  File "/tmp/slurm-5684366/__main___CustomGATConv_propagate_xc1svw_5.py", line 223, in propagate
    out = self.aggregate(
  File "/home/p_gnngw/miniconda3/envs/directed_gnn/lib/python3.10/site-packages/torch_geometric/nn/conv/message_passing.py", line 618, in aggregate
    return self.aggr_module(inputs, index, ptr=ptr, dim_size=dim_size,
  File "/home/p_gnngw/miniconda3/envs/directed_gnn/lib/python3.10/site-packages/torch_geometric/experimental.py", line 117, in wrapper
    return func(*args, **kwargs)
  File "/home/p_gnngw/miniconda3/envs/directed_gnn/lib/python3.10/site-packages/torch_geometric/nn/aggr/base.py", line 136, in __call__
    raise e
  File "/home/p_gnngw/miniconda3/envs/directed_gnn/lib/python3.10/site-packages/torch_geometric/nn/aggr/base.py", line 128, in __call__
    return super().__call__(x, index=index, ptr=ptr, dim_size=dim_size,
  File "/home/p_gnngw/miniconda3/envs/directed_gnn/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/p_gnngw/miniconda3/envs/directed_gnn/lib/python3.10/site-packages/torch_geometric/nn/aggr/basic.py", line 22, in forward
    return self.reduce(x, index, ptr, dim_size, dim, reduce='sum')
  File "/home/p_gnngw/miniconda3/envs/directed_gnn/lib/python3.10/site-packages/torch_geometric/nn/aggr/base.py", line 182, in reduce
    return scatter(x, index, dim, dim_size, reduce)
  File "/home/p_gnngw/miniconda3/envs/directed_gnn/lib/python3.10/site-packages/torch_geometric/utils/_scatter.py", line 74, in scatter
    index = broadcast(index, src, dim)
  File "/home/p_gnngw/miniconda3/envs/directed_gnn/lib/python3.10/site-packages/torch_geometric/utils/_scatter.py", line 179, in broadcast
    return src.view(size).expand_as(ref)
RuntimeError: The expanded size of the tensor (2) must match the existing size (8064) at non-singleton dimension 1.  Target sizes: [8064, 2, 16].  Tensor sizes: [1, 8064, 1]
